// чистая виртуальная функция

#include <iostream>
using namespace std;
//////////////////////////////////////////////////////////////////////////////
class Base 				// базовый класс
{
public:
	virtual void show() = 0;	// Чистая виртуальная функция
};
//////////////////////////////////////////////////////////////////////////////
class Derv1 : public Base		// производный класс 1
{
public:
	void show()
		{ cout << "Derv1\n"; }
};
//////////////////////////////////////////////////////////////////////////////
class Derv2 : public Base		// производный класс 2
{
public:
	void show()
		{ cout << "Derv2\n"; }
};
//////////////////////////////////////////////////////////////////////////////
int main
{
	// Base bad;			// невозможно создать объект

	Base* arr[2];			// массив указателей
					// на базовый класс

	Derv1 dv1;			// объект производного класса 1
	Derv2 dv2;			// объект производного класса 2
	
	arr[0] = &dv1;			// занести адрес dv1 в массив
	arr[1] = &dv2;			// занести адрес dv2 в массив	
	
	arr[0]->show();			// выполнить show()
	arr[1]->show();			// адрес dv2 занести в указатель
	
	return 0;
}