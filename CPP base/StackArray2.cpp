// реализация стека на програмном уровне вар2
// перегрузка функций базового и производного классов

include <iostream>
include <process.h>		// для exit()
using namespace std;
//////////////////////////////////////////////////////////////////////////////
class Stack
{
	protected:			// использовать private здесь нельзя
		enum { MAX = 3 };	// размер стека
		int st[MAX];		// стек в виде массива
		int top;		// вершина стека (индекс последнего элемента стека)
	public:
		Stack()			// констуктор
			{ top = -1; }
		void push(int var)	// поместить в стек
			{ st[++top] = var; }
		int pop()		// взять из стека
			{ return st[top--]; }
};
//////////////////////////////////////////////////////////////////////////////
class Stack2
{
public:
	void push(int var)		// помещение числа в стек
	{
		if (top >= MAX - 1)	// если стек полон то ошибка
			{ cout << "\nОшибка! Стек полон!"; exit(1); }
		Stack::push(var);	// вызов функции push класса Stack
	}
	int pop()			// извлечение числа из стека
	{
		if (top < 0)		// если стек пуст то ошибка
		{ cout << "\nОшибка! Стек пуст!"; exit(1); }
		return Stack::pop();	// вызов функции pop класса Stack (можно без return)
	}

};
//////////////////////////////////////////////////////////////////////////////
int main()
{
	Stack2 s1;
	
	s1.push(11);			// поместим в стек несколько чисел
	s1.push(22);
	s1.push(33);


	cout << endl << s1.pop();	// заберем числа из стека
	cout << endl << s1.pop();
	cout << endl << s1.pop();
	cout << endl << s1.pop();	// а данных больше нет

	return 0;
}